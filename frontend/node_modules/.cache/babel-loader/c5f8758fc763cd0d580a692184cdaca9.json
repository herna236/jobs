{"ast":null,"code":"var _jsxFileName = \"/Users/veronica/Desktop/react-jobly-1/frontend/src/routes-nav/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Route, Navigate, useLocation } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  element: Element,\n  ...rest\n}) {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const location = useLocation();\n  console.debug(\"PrivateRoute\", \"currentUser=\", currentUser);\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: Element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PrivateRoute, \"bhy7Z4ISwEpZgVBGhLBjV07p5Ac=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Route","Navigate","useLocation","UserContext","jsxDEV","_jsxDEV","PrivateRoute","element","Element","rest","_s","currentUser","location","console","debug","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/veronica/Desktop/react-jobly-1/frontend/src/routes-nav/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Navigate, useLocation } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ element: Element, ...rest }) {\n  const { currentUser } = useContext(UserContext);\n  const location = useLocation();\n\n  console.debug(\n    \"PrivateRoute\",\n    \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return (\n    <Route\n      {...rest}\n      element={Element}\n    />\n  );\n}\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,WAAW,MAAM,qBAAqB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,YAAYA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACI,WAAW,CAAC;EAC/C,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BW,OAAO,CAACC,KAAK,CACX,cAAc,EACd,cAAc,EAAEH,WAClB,CAAC;EAED,IAAI,CAACA,WAAW,EAAE;IAChB,oBAAON,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEL;MAAS,CAAE;MAACM,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,oBACEjB,OAAA,CAACL,KAAK;IAAA,GACAS,IAAI;IACRF,OAAO,EAAEC;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEN;AAACZ,EAAA,CAnBQJ,YAAY;EAAA,QAEFJ,WAAW;AAAA;AAAAqB,EAAA,GAFrBjB,YAAY;AAqBrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}