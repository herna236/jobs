{"ast":null,"code":"import React,{useState,useContext}from\"react\";import Alert from\"../common/Alert\";import JoblyApi from\"../api/api\";import UserContext from\"../auth/UserContext\";// eslint-disable-next-line\nimport useTimedMessage from\"../hooks/useTimedMessage\";/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProfileForm(){const{currentUser,setCurrentUser}=useContext(UserContext);const[formData,setFormData]=useState({firstName:currentUser.firstName,lastName:currentUser.lastName,email:currentUser.email,username:currentUser.username,password:\"\"});const[formErrors,setFormErrors]=useState([]);// switch to use our fancy limited-time-display message hook\nconst[saveConfirmed,setSaveConfirmed]=useState(false);// const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\nconsole.debug(\"ProfileForm\",\"currentUser=\",currentUser,\"formData=\",formData,\"formErrors=\",formErrors,\"saveConfirmed=\",saveConfirmed);/** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */async function handleSubmit(evt){evt.preventDefault();let profileData={firstName:formData.firstName,lastName:formData.lastName,email:formData.email,password:formData.password};let username=formData.username;let updatedUser;try{updatedUser=await JoblyApi.saveProfile(username,profileData);}catch(errors){debugger;setFormErrors(errors);return;}setFormData(f=>({...f,password:\"\"}));setFormErrors([]);setSaveConfirmed(true);// trigger reloading of user information throughout the site\nsetCurrentUser(updatedUser);}/** Handle form data changing */function handleChange(evt){const{name,value}=evt.target;setFormData(f=>({...f,[name]:value}));setFormErrors([]);}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Profile\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"p\",{className:\"form-control-plaintext\",children:formData.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{name:\"firstName\",className:\"form-control\",value:formData.firstName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{name:\"lastName\",className:\"form-control\",value:formData.lastName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{name:\"email\",className:\"form-control\",value:formData.email,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Confirm password to make changes:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",className:\"form-control\",value:formData.password,onChange:handleChange})]}),formErrors.length?/*#__PURE__*/_jsx(Alert,{type:\"danger\",messages:formErrors}):null,saveConfirmed?/*#__PURE__*/_jsx(Alert,{type:\"success\",messages:[\"Updated successfully.\"]}):null,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-block mt-4\",onClick:handleSubmit,children:\"Save Changes\"})]})})})]});}export default ProfileForm;","map":{"version":3,"names":["React","useState","useContext","Alert","JoblyApi","UserContext","useTimedMessage","jsx","_jsx","jsxs","_jsxs","ProfileForm","currentUser","setCurrentUser","formData","setFormData","firstName","lastName","email","username","password","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","console","debug","handleSubmit","evt","preventDefault","profileData","updatedUser","saveProfile","errors","f","handleChange","name","value","target","className","children","onChange","type","length","messages","onClick"],"sources":["/Users/veronica/Desktop/react-jobly-1/frontend/src/profiles/ProfileForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\n      \"ProfileForm\",\n      \"currentUser=\", currentUser,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n      \"saveConfirmed=\", saveConfirmed,\n  );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n      <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n        <h3>Profile</h3>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label>Username</label>\n                <p className=\"form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                    name=\"email\"\n                    className=\"form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm password to make changes:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n              </div>\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}